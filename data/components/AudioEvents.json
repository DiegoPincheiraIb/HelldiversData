{ "AudioEvents" : {
    "switch_blocked" : { "type": "uint", "default": 3548822050, "description": "[wwise]" },
    "switch_activate" : { "type": "uint", "default": 3246557153, "description": "[wwise]" },
    "switch_move" : { "type": "uint", "default": 645611057, "description": "[wwise]" },
    "grid_move" : { "type": "uint", "default": 2702671431, "description": "[wwise]" },
    "grid_fail" : { "type": "uint", "default": 1953222880, "description": "[wwise]" },
    "grid_success" : { "type": "uint", "default": 2829846130, "description": "[wwise]" },
    "slide_move_loop" : { "type": "uint", "default": 4051641849, "description": "[wwise]" },
    "slide_move_stop" : { "type": "uint", "default": 2004698717, "description": "[wwise]" },
    "slide_move_unlocked" : { "type": "uint", "default": 3246557153, "description": "[wwise]" },
    "keypad_up" : { "type": "uint", "default": 2591240217, "description": "[wwise]" },
    "keypad_down" : { "type": "uint", "default": 3394921504, "description": "[wwise]" },
    "keypad_move" : { "type": "uint", "default": 645611057, "description": "[wwise]" },
    "keypad_success" : { "type": "uint", "default": 221362052, "description": "[wwise]" },
    "hack_move_vertical" : { "type": "uint", "default": 107442124, "description": "[wwise]" },
    "hack_move_horizontal" : { "type": "uint", "default": 4097779655, "description": "[wwise]" },
    "hack_success" : { "type": "uint", "default": 2949335015, "description": "[wwise]" },
    "hack_connect" : { "type": "uint", "default": 45473572, "description": "[wwise]" },
    "code_input_up" : { "type": "uint", "default": 645611057, "description": "[wwise]" },
    "code_input_down" : { "type": "uint", "default": 645611057, "description": "[wwise]" },
    "code_input_right" : { "type": "uint", "default": 645611057, "description": "[wwise]" },
    "code_input_left" : { "type": "uint", "default": 645611057, "description": "[wwise]" },
    "code_input_success" : { "type": "uint", "default": 645611057, "description": "[wwise]" },
    "code_input_fail" : { "type": "uint", "default": 645611057, "description": "[wwise]" },
    "on_input_correct_sound" : { "type": "uint", "description": "[wwise]The sound to play when correct input has been entered." },
    "on_input_failed_sound" : { "type": "uint", "description": "[wwise]The sound to play when wrong input has been entered." },
    "wait_start" : { "type": "uint", "description": "[wwise]Start of wait events - both disable wait time and wait minigame" },
    "wait_end" : { "type": "uint", "description": "[wwise]End of wait events - both disable wait time and wait minigame" },
    "wait_loop_sound_parameter" : { "type": "MinigameSoundParameter", "default": "MinigameSoundParameter_Wait_Progress", "description": "The parameter to tweak on the looping sound for wait based on progress" },
    "alignment_loop_sound" : { "type": "uint", "description": "[string]Sound which plays during alignment" },
    "alignment_match_sound" : { "type": "uint", "description": "[string]Sound which plays once the values match" },
    "alignment_unmatch_sound" : { "type": "uint", "description": "[string]Sound which plays once the values no longer match" },
    "alignment_loop_sound_parameter" : { "type": "MinigameSoundParameter", "default": "MinigameSoundParameter_None", "description": "The parameter to tweak on the looping sound when aligning stuff" },
    "external_switch_correct" : { "type": "uint", "description": "[string]Sound which plays once an external switch becomes correct" },
    "external_switch_incorrect" : { "type": "uint", "description": "[string]Sound which plays once an external switch becomes incorrect" },
    "horizontal_alignment_movement_loop_sfx_start" : { "type": "uint", "description": "[string]Sound which plays for horizontal alignment movement" },
    "horizontal_alignment_movement_loop_sfx_stop" : { "type": "uint", "description": "[string]Stop event when horizontal movement ends" },
    "vertical_alignment_movement_loop_sfx_start" : { "type": "uint", "description": "[string]Sound which plays for vertical alignment movement" },
    "vertical_alignment_movement_loop_sfx_stop" : { "type": "uint", "description": "[string]Stop event when vertical movement ends" }
}}
