{ "AiEnemyComponent" : {
    "guard" : { "type": "AiEnemyGuardSettings" },
    "patrol" : { "type": "AiEnemyPatrolSettings" },
    "investigate" : { "type": "AiEnemyInvestigateSettings" },
    "combat" : { "type": "AiEnemyCombatSettings" },
    "retreat" : { "type": "AiEnemyRetreatSettings" },
    "charge" : { "type": "AiEnemyChargeSettings" },
    "follow_curve" : { "type": "AiEnemyFollowCurveSettings" },
    "landing_ability" : { "type": "AbilityId", "default": "AbilityId_Invalid", "description": "Playing this ability when landing after being dropped from a dropship." },
    "migrate_ability" : { "type": "AbilityId", "default": "AbilityId_Invalid", "description": "Ability to play while migrating." },
    "despawn_ability" : { "type": "AbilityId", "default": "AbilityId_generic_despawn", "description": "Ability to play an encounter enemy leaves combat and enters unaware." },
    "barks" : { "type": "AiEnemyBarks", "description": "Lists of bark abilities to play when changing alertness level." },
    "flank" : { "type": "AiEnemyFlankSettings", "description": "Flanking positioning settings" },
    "planted" : { "type": "AiEnemyPlantedSettings", "description": "Planted settings" },
    "cloak" : { "type": "AiEnemyCloakSettings", "description": "Cloak settings" },
    "obstacle_abilities" : { "type": "AiEnemyObstacleAbilities", "description": "Abilities to use if an obstacle blocks your path" },
    "idle_vo" : { "type": "AiEnemyVOIdleSettings", "description": "Idle VO settings" },
    "encounter_combat_time" : { "type": "float", "default": 30 },
    "target_share_radius" : { "type": "float", "default": 15, "description": "the radius in which the enemy shares its target with its peers" },
    "use_feelers_navigation_distance" : { "type": "float", "default": 30 },
    "interception_strength" : { "type": "float", "default": 0.1, "description": "A value between 0 and 1 for how much this enemy will try to intercept. This is intercept_position = lerp(position, estimated_position, interception_strength)" },
    "task_marker_node" : { "type": "uint", "description": "[string]" },
    "aim_with_mount" : { "type": "uint", "description": "[string]The mount to use to calculate angles to targets." },
    "nav_height_offset" : { "type": "float", "default": 0, "description": "Nav height offset for flying units" },
    "target_confirmation_lose_time" : { "type": "float", "default": 5, "description": "How long it takes to lose target confirmation" },
    "combat_value" : { "type": "float", "default": 1, "description": "The value this enemy has for various calculations. e.g how strong this enemy is. Used for kill objectives and determining combat intensity." },
    "spot_time_close" : { "type": "float", "default": 0.3, "description": "How long it takes for an enemy to see a target at the inner radius." },
    "spot_time_far" : { "type": "float", "default": 3, "description": "How long it takes for an enemy to see a target at its max range." },
    "voiceover_speaker_id" : { "type": "uint", "description": "[string]" },
    "move_to_goal_when_rotating" : { "type": "byte", "description": "[bool]If the enemy should always be moving to goal when rotating for abilities. Useful for big enemies that have root driven rotation like the strider" },
    "rotate_to_nav_goal" : { "type": "byte", "description": "[bool]If the enemy should always try to rotate towards navigation goal" },
    "rotate_to_navigate" : { "type": "byte", "description": "[bool]If the enemy should be considered at goal when rotated towards navigation goal" },
    "can_return_fire" : { "type": "byte", "description": "[bool]If the enemy should stand still and return fire. Should be true for enemies with long range weapons." },
    "is_flying" : { "type": "byte", "description": "[bool]True if the enemy should be flying. If this is true, all target distances will be calculated in 2D." },
    "always_update" : { "type": "byte", "description": "[bool]True if the enemy should always receive a full update. False if it should update according to AI_ENEMY_MASTER_UPDATE_SUBSET_SIZE." },
    "probability_increase_for_taunt" : { "type": "float", "default": 0.01, "description": "How much we increase the odds of the avatar to taunt. Example: 0.01 = 1 Percent" },
    "taunt_vo_id" : { "type": "uint", "description": "[string]What taunt vo should the helldiver use when this enemy is killed?" },
    "death_hit_marker_audio_event" : { "type": "uint", "description": "[wwise]The Wwise event that should be emitted if the local player kills this enemy, for 2D audio kill feedback" },
    "attach_to_guard_force" : { "type": "byte", "description": "[bool]If false then won't attach to guard force when spawned" }
}}
