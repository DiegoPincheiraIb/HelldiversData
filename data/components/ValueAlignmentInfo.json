{ "ValueAlignmentInfo" : {
    "interact_speed_left" : { "type": "float", "default": 50, "description": "Input movement multiplier for the left value." },
    "max_value_left" : { "type": "float", "default": 100, "description": "Max input value for the left value." },
    "min_value_left" : { "type": "float", "default": 0, "description": "Min input value for the left value." },
    "animation_variable_left" : { "type": "uint", "description": "[string]Name of the animation variable to control with the left value." },
    "animation_value_min_left" : { "type": "float", "default": 0, "description": "The minimum value for the range set to the animation variable" },
    "animation_value_max_left" : { "type": "float", "default": 1, "description": "The maximum value for the range set to the animation variable" },
    "error_margin_left" : { "type": "float", "default": 1, "description": "Error margin for the left value." },
    "interact_speed_right" : { "type": "float", "default": 50, "description": "Input movement multiplier for the right value." },
    "max_value_right" : { "type": "float", "default": 100, "description": "Max input value for the right value." },
    "min_value_right" : { "type": "float", "default": 0, "description": "Min input value for the right value." },
    "animation_variable_right" : { "type": "uint", "description": "[string]Name of the animation variable to control with the right value." },
    "animation_value_min_right" : { "type": "float", "default": 0, "description": "The minimum value for the range set to the animation variable" },
    "animation_value_max_right" : { "type": "float", "default": 1, "description": "The maximum value for the range set to the animation variable" },
    "error_margin_right" : { "type": "float", "default": 1, "description": "Error margin for the right value." },
    "value_hold_time" : { "type": "float", "default": 3, "description": "Time required to hold correct inputs until the minigame is completed. If set to -1 then this minigame will never end" },
    "starting_value_left" : { "type": "float", "default": 0, "description": "The starting left value of the align minigame if Start Random Left is false." },
    "start_random_left" : { "type": "byte", "description": "[bool]Whether to use a random starting value for the left value or use the set Starting Value Left" },
    "starting_value_right" : { "type": "float", "default": 0, "description": "The starting right value of the align minigame if Start Random Right is false." },
    "start_random_right" : { "type": "byte", "description": "[bool]Whether to use a random starting value for the right value or use the set Starting Value Right" },
    "lock_on_match" : { "type": "byte", "description": "[bool]Whether to lock the position once a match is found" },
    "goal_locked_script" : { "type": "uint", "description": "[string]Script to trigger when moving to the target values" },
    "goal_lost_script" : { "type": "uint", "description": "[string]Script to trigger when moving away from the target position" },
    "auto_alignment_revert" : { "type": "byte", "description": "[bool]If true then this minigame will revert itself to default value alignment state when reverting, rather than doing a hard reset to default values" },
    "tap_controls" : { "type": "byte", "description": "[bool]If true then player inputs are on/off toggles rather than held inputs, so they don't have to be at the terminal to change the values" },
    "loc_targeting_location" : { "type": "uint", "default": 4274817244, "description": "[string]" },
    "loc_targeting_location_success" : { "type": "uint", "default": 3762120061, "description": "[string]" },
    "loc_targeting_location_progress" : { "type": "uint", "default": 3034324044, "description": "[string]" }
}}
