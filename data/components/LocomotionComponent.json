{ "LocomotionComponent" : {
    "locomotion_sets" : { "type": "array", "subtype": "LocomotionSet", "description": "Contains all locomotion sets." },
    "move_speed_modulation" : { "type": "MoveSpeedModulation", "description": "The settings to modulate the move speed based on turn rate." },
    "acceleration" : { "type": "float", "default": -1, "description": "Move Speed acceleration. Negative means instant acceleration." },
    "deceleration" : { "type": "float", "default": -1, "description": "Move Speed deceleration. Negative means instant acceleration." },
    "decelerate_to_zero_threshold_angle" : { "type": "float", "default": 75, "description": "If angle between wanted movement and current movement is greater than this, first decelerate to 0 and then accelerate in the wanted direction." },
    "standing_still_threshold" : { "type": "float", "default": 0.025, "description": "Threshold for being considered standing still." },
    "movement_halt_duration" : { "type": "float", "default": 0, "description": "The duration you will be halted for after going from movement to standing still." },
    "max_turn_rate" : { "type": "float", "default": 180, "description": "The limit in degrees per second, the unit is allowed to rotate with animations." },
    "snap_rotation_angle_idle" : { "type": "float", "default": 0, "description": "The limit in degrees. Doesn't allow HD body to twist" },
    "snap_rotation_angle_move_aim" : { "type": "float", "default": 0, "description": "The limit in degrees. Doesn't allow HD body to twist" },
    "turn_rate_interpolation_speed" : { "type": "float", "default": 20, "description": "Interpolation speed of turn rate. 50% is used when not turning." },
    "move_angle_interpolation_speed" : { "type": "float", "default": 5, "description": "Interpolation speed of movement angle. 20% is used when not turning." },
    "angle_limit_forward_negative" : { "type": "float", "default": -130, "description": "Negative Threshold angle at which the locomotion changes from forward to backward." },
    "angle_limit_forward_positive" : { "type": "float", "default": 130, "description": "Positive Threshold angle at which the locomotion changes from forward to backward." },
    "angle_limit_backward_negative" : { "type": "float", "default": -90, "description": "Negative Threshold angle at which the locomotion changes from backward to forward." },
    "angle_limit_backward_positive" : { "type": "float", "default": 90, "description": "Positive Threshold angle at which the locomotion changes from backward to forward." },
    "use_slope_for_movement_penalty" : { "type": "byte", "description": "[bool]Use slope angle to slow down the character." },
    "use_rotation_as_look_direction" : { "type": "byte", "description": "[bool]Look towards where the unit is rotated, (movement becomes strafing). If not having this enabled, the look direction needs to be externally provided." },
    "use_motion_move_speed" : { "type": "byte", "description": "[bool]With this enabled the motion move speed will be sent as the " },
    "scale_turn_rate_interpolation_with_speed" : { "type": "byte", "description": "[bool]lower move speeds have a slower turn rate interpolation, currently hardcoded to the striders speed range" },
    "movement_penalty_slope_angles" : { "type": "CApiVector2", "description": "The movement penality when walking in slopes. The movement penalty is the current angle remapped into this range. ([x, y] -> [0, 1])" },
    "ignore_movement_modifiers_for_range_selection" : { "type": "byte", "description": "[bool]If set, the move speed BEFORE movement modifiers is used for animation range selection. This is used for the avatar to enure the correct animation is used in difficult terrain." },
    "external_movement_modifier_chase_speed" : { "type": "float", "default": 2, "description": "The speed with which to chase the external movement modifiers." },
    "always_update_look_angle" : { "type": "byte", "description": "[bool]If set, the look angle is always updated, even if we are standing still." },
    "focused_strafe_lock_enabled" : { "type": "byte", "description": "[bool]In a locomotion-set speedrange that has focused enabled, when rotating, do we stop while rotating to assure we never strafe?" },
    "_set_motion_movement_input" : { "type": "byte", "description": "[bool]If enabled we will send in the current speed and direction to the motion components 'movement' input." },
    "transition_condition_animation_events_previous" : { "type": "array", "subtype": "uint", "description": "[string]The animation events that which if we detect an enter to an exit, we will set the move angle transition variable." },
    "transition_condition_animation_events_current" : { "type": "array", "subtype": "uint", "description": "[string]The animation events that which if we detect an enter to an exit, we will set the move angle transition variable." },
    "transition_set_move_angle_variable" : { "type": "uint", "description": "[string]The name of the animation varaible which if we detect an enter to an exit, we will send the current move angle to." },
    "transition_linear_rotation_override_frames" : { "type": "float", "default": -1, "description": "If we want to add linear override when the transition condition matches, the value needs to be above or equal to 0." },
    "turn_adjust_variable" : { "type": "uint", "default": 3787281210, "description": "[string]The name of the animation varaible we use for turn adjusts." },
    "enable_force_turn_adjusts" : { "type": "byte", "description": "[bool]If Enabled, we force turn adjusts past 10 degrees of difference, even without a turn range in locomotion-sets." },
    "update_turn_adjust_every_frame" : { "type": "byte", "description": "[bool]If set, the turn adjust is always updated, even if we are standing still." }
}}
