{ "VehicleMotionComponent" : {
    "acceleration" : { "type": "float", "default": 10 },
    "friction" : { "type": "float", "default": 1 },
    "actor_name" : { "type": "uint", "default": 2748617169, "description": "[string]Name of the actor used to calculate impact damage deceleration" },
    "speed_limit" : { "type": "float", "default": 30, "description": "Threshold speed to enter 'fast' state for particle effect" },
    "flip_steering" : { "type": "byte", "description": "[bool]If the steering axle is behind the center of mass, we need to flip the steering direction." },
    "base_impact_damage_deceleration" : { "type": "float", "default": 10, "description": "The minimum deceleration required to take impact damage" },
    "max_impact_damage_deceleration" : { "type": "float", "default": 100, "description": "The minimum deceleration required to take maximum impact damage" },
    "base_received_impact_damage" : { "type": "float", "default": 5, "description": "Base impact damage instance we receive (given flat surface landing)." },
    "max_received_impact_damage" : { "type": "float", "default": 250, "description": "The maximum impact damage instance  we receive (given flat surface landing)." },
    "impact_damage_invulnerability_time" : { "type": "float", "default": 2, "description": "When activated, the vehicle is invulnerable to impact damage for this many seconds. This is to avoid taking damage when dropped from the shuttle." },
    "impact_type" : { "type": "SurfaceImpactType", "default": "SurfaceImpactType_crash_medium", "description": "The surface effect type to play when taking impact damage." },
    "base_received_dirt" : { "type": "float", "default": 0.2, "description": "The amount of dirt added to this vehicle if receiving base damage." },
    "max_received_dirt" : { "type": "float", "default": 1, "description": "The amount of dirt added to this vehicle if receiving maximum impact damage." },
    "brake_resistance" : { "type": "VehiclePedalResistance", "description": "Only used on supported controllers." },
    "accelerator_resistance" : { "type": "VehiclePedalResistance", "description": "Only used on supported controllers." },
    "engine_damage_rpm_multiplier" : { "type": "float", "default": 0.75, "description": "The multiplier to apply to the vehicle's RPM values once the engine is damaged." },
    "engine_damage_torque_multiplier" : { "type": "float", "default": 0.5, "description": "The multiplier to apply to the vehicle's torque values once the engine is damaged." },
    "transmission_damage_gear_change_time_multiplier" : { "type": "float", "default": 2, "description": "The multiplier to apply to how long the transmission takes to change gears if the transmission is damaged." },
    "wheel_bare_rim_radius" : { "type": "float", "default": 0.4, "description": "What is the radius of the bare rims on this vehicles wheels that should be used after the tyres are damaged." },
    "wheel_damage_friction_multiplier" : { "type": "float", "default": 0.5, "description": "The multiplier to apply to the friction values of the specific wheel that is damaged." },
    "steering_responsiveness" : { "type": "float", "default": 10, "description": "How fast the steering interpolates to the wanted value." },
    "throttle_responsiveness" : { "type": "float", "default": 5, "description": "How fast the throttle interpolates to the wanted value." },
    "brake_responsiveness" : { "type": "float", "default": 5, "description": "How fast the break interpolates to the wanted value." },
    "offroad_mode" : { "type": "VehicleOffroadModeInfo", "description": "Settings for an optional Offroad Mode, in which we switch out the gearbox for a higher ratio one (slower but more torque)." },
    "blocker_actors" : { "type": "array", "subtype": "uint", "description": "[string]Name of the actors used as player blockers. These are enabled when detaching from the shuttle." },
    "remote_simulation_use_physics" : { "type": "byte", "description": "[bool]Indicates if we enable/disable the physics on the remote peer." },
    "remote_simulation_use_velocity" : { "type": "byte", "description": "[bool]Indicates if we should calcualte the velocity to reach the desired point and apply to the physics body. used to handle collisions between vehicles." },
    "remote_simulation_enabled" : { "type": "byte", "description": "[bool]Indicates if we should simulate on the remote clients or just let the physics be." }
}}
