{ "ProjectileWeaponComponent" : {
    "projectile_type" : { "type": "ProjectileType", "default": "ProjectileType_None", "description": "Type of projectile it fires." },
    "rounds_per_minute" : { "type": "CApiVector3", "description": "Rounds per minute depending on weapon setting. Y is the default ROF." },
    "zeroing_slots" : { "type": "CApiVector3", "description": "The zeroing distances of the weapon." },
    "zeroing_hipfire" : { "type": "float", "default": 20, "description": "The default zeroing distance while not aiming a weapon" },
    "current_zeroing_slot" : { "type": "uint", "description": "The slot in the zeroing distances to use by default." },
    "infinite_ammo" : { "type": "byte", "description": "[bool]True if this projectile weapon can never run out of ammo." },
    "projectile_entity" : { "type": "ulong", "description": "[adhd]If this is set an entity is spawned when firing instead of adding a projectile to the projectile manager." },
    "use_firenode_pose" : { "type": "byte", "description": "[bool]If set, we fire the projectile in the firenode's direction, not towards the aim target. This is generally not desired due to accumulated errors in animation chains, but is needed for warning flares (situations where we want to play an ability and fire but not change target)." },
    "heat_buildup" : { "type": "WeaponHeatBuildup", "description": "Controls visual heat effects on the weapon." },
    "scale_down_used_fire_node" : { "type": "byte", "description": "[bool]If set, scale down the used fire node to zero (in order to hide a rocket for example)" },
    "on_round_fired_shakes" : { "type": "WeaponCameraShakeInfo", "description": "Settings for local and in-world camera shakes to play on every round fired." },
    "num_low_ammo_rounds" : { "type": "uint", "default": 4, "description": "Number of rounds to play the low ammo effects" },
    "low_ammo_audio_event" : { "type": "uint", "description": "[string]Audio event to play in addition to the regular firing audio when low on ammo." },
    "last_bullet_audio_event" : { "type": "uint", "description": "[string]Audio event to play in addition to the regular firing audio for the last bullet." },
    "last_bullet_owner_vo_event" : { "type": "uint", "default": 2645484469, "description": "[string]VO event to play on the owner of the weapon when the last bullet has been fired." },
    "wind_effect_template" : { "type": "WindEffectTemplate", "default": "WindEffectTemplate_None", "description": "Wind effect template to play when firing." },
    "speed_multiplier" : { "type": "float", "default": 1, "description": "Projectile speed multiplier." },
    "damage_addends" : { "type": "HitZoneClassValues", "description": "Damage to add to the projectile's value for each damage class. Used by weapon customizaitons." },
    "ap_addends" : { "type": "HitZoneClassValues", "description": "Armor penetration to add to the projectile's value for each damage class. Used by weapon customizaitons." },
    "spinup_time" : { "type": "float", "default": 0, "description": "Time from 'start fire' to first projectile firing" },
    "rpc_synced_fire_events" : { "type": "byte", "description": "[bool]ONLY USE FOR SINGLE-FIRE/SLOW FIRING WEAPONS. Primarily useful for sniper rifles, explosive one-shots etc. that need the firing event to be highly accurately synced!" },
    "casing_eject" : { "type": "WeaponCasingEffectInfo", "description": "Particle effect of the shellcasing." },
    "muzzle_flash" : { "type": "ulong", "description": "[particles]Particle effect of the muzzle flash, played on attach_muzzle." },
    "shockwave_type" : { "type": "SurfaceImpactType", "default": "SurfaceImpactType_weapon_shockwave_medium", "description": "The surface effect to play normal to the ground underneath the muzzle." },
    "use_faint_shockwave" : { "type": "byte", "description": "[bool]If true, a small shockwave is played when [1m, 2m] from the ground instead of the regular one." },
    "use_midi_event_system" : { "type": "byte", "description": "[bool]Fire event will be posted using Wwise's MIDI system as a MIDI sequence (cannot be paused/resumed)." },
    "midi_timing_randomisation" : { "type": "CApiVector2", "description": "Events posted during the MIDI sequence will have a random time offset, measured in milliseconds." },
    "midi_stop_delay" : { "type": "float", "default": 0, "description": "A delay for when to notify Wwise that the MIDI sequence has stopped, measured in milliseconds." },
    "fire_loop_start_audio_event" : { "type": "uint", "description": "[wwise]The looping audio event to start when starting to fire." },
    "fire_loop_stop_audio_event" : { "type": "uint", "description": "[wwise]The looping audio event to play when stopping fire." },
    "fire_single_audio_event" : { "type": "uint", "description": "[wwise]The audio event to trigger when doing single-fire (if we don't have looping sounds)." },
    "fire_reflect_audio_event" : { "type": "uint", "description": "[wwise]The audio event to trigger to simulate an early reflection." },
    "silenced_fire_reflect_audio_event" : { "type": "uint", "description": "[wwise]The audio event to trigger to simulate an early reflection, with silencer equipped." },
    "haptics_fire_loop_start_audio_event" : { "type": "uint", "description": "[wwise]The looping audio event to start when starting to fire." },
    "haptics_fire_loop_stop_audio_event" : { "type": "uint", "description": "[wwise]The looping audio event to play when stopping fire." },
    "haptics_fire_single_audio_event" : { "type": "uint", "description": "[wwise]The audio event to trigger when doing single-fire (if we don't have looping sounds)." },
    "fire_loop_camera_shake" : { "type": "ulong", "description": "[camera_shake]The camera shake to run when firing" },
    "fire_loop_camera_shake_radius" : { "type": "CApiVector2", "description": "Inner/outer camera shake radiuses when firing." },
    "silenced_fire_loop_start_audio_event" : { "type": "uint", "description": "[wwise]The looping audio event to start when starting to fire with suppressor." },
    "silenced_fire_loop_stop_audio_event" : { "type": "uint", "description": "[wwise]The looping audio event to play when stopping fire  with suppressor." },
    "silenced_fire_single_audio_event" : { "type": "uint", "description": "[wwise]The audio event to trigger when doing single-fire (if we don't have looping sounds)  with suppressor." },
    "fire_source_node" : { "type": "uint", "description": "[string]The node to play the firing audio events at." },
    "dry_fire_audio_event" : { "type": "uint", "description": "[wwise]The wwise sound id to play when dry firing." },
    "dry_fire_repeat_audio_event" : { "type": "uint", "description": "[wwise]The wwise sound id to play when repeatedly dry firing." },
    "heat_percentage_material_variable" : { "type": "uint", "description": "[string]The material variable to try to set on each mesh when heat is updated" },
    "silenced" : { "type": "byte", "description": "[bool]If this weapon should use the silenced sound or not. Used by / overridden by customization" },
    "aim_zeroing_quality" : { "type": "ProjectileZeroingQuality", "default": "ProjectileZeroingQuality_High", "description": "How well to attempt to compensate for drag when aiming. Defaults to High (8 iterations). Set to None to ignore drag." },
    "casing_eject_disabled_on_fire" : { "type": "byte", "description": "[bool]Turns off casing ejection/effects when firing the weapon." },
    "burst_fire_rate" : { "type": "float", "default": 0, "description": "If above 0, the fire rate will be changed to this, when the weapon is set to Burst." },
    "weapon_function_muzzle_velocity" : { "type": "float", "default": 150, "description": "If we have the Muzzle Velocity weapon function and we switch to it, what should our projectile velocity be?" },
    "weapon_function_projectile_type" : { "type": "ProjectileType", "default": "ProjectileType_None", "description": "If we have the Programmable Ammo weapon function and we switch to it, what should our projectile type be?" }
}}
