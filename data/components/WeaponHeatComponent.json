{ "WeaponHeatComponent" : {
    "magazines" : { "type": "uint", "default": 6, "description": "Starting number of magazines." },
    "magazines_refill" : { "type": "uint", "default": 6, "description": "Number of magazines given on refill." },
    "magazines_max" : { "type": "uint", "default": 12, "description": "Maximum number of magazines." },
    "overheat_temperature" : { "type": "float", "default": 2000, "description": "Temperature at which the weapon overheats." },
    "warning_temperature" : { "type": "float", "default": 1500, "description": "Temperature at which the weapon cues an audible warning." },
    "emission_temperature" : { "type": "float", "default": 1000, "description": "Temperature at which the weapon begins emitting smoke/steam particles." },
    "rtpc_temperature" : { "type": "float", "default": 1000, "description": "Temperature at which the weapon starts altering the laser RTPC." },
    "temp_gain_per_shot" : { "type": "float", "default": 2, "description": "Amount of temperature added to the weapon per shot when firing." },
    "temp_gain_per_second" : { "type": "float", "default": 100, "description": "Amount of temperature added to the weapon per second when firing." },
    "temp_gain_per_second_modifier" : { "type": "float", "default": 100, "description": "Multiplier on .the base temperature gain used by customizations." },
    "temp_loss_per_second" : { "type": "float", "default": 200, "description": "Amount of temperature removed from the weapon per second when not firing." },
    "temp_loss_per_second_overheated" : { "type": "float", "default": 400, "description": "Amount of temperature removed from the weapon per second after it's overheated." },
    "needs_reload_after_overheat" : { "type": "byte", "description": "[bool]Should the weapon require a new magazine after an overheat." },
    "overheat_duration" : { "type": "float", "default": 5, "description": "How long the weapon remains unfirable after an overheat." },
    "firing_charge" : { "type": "float", "default": 0, "description": "Charge required to fire." },
    "charge_gain_per_second" : { "type": "float", "default": 100, "description": "Amount of charge added to the weapon per second while holding the trigger." },
    "charge_loss_per_second" : { "type": "float", "default": 100, "description": "Amount of charge removed from the weapon per second while not holding the trigger." },
    "reset_charge_after_shot" : { "type": "byte", "description": "[bool]Should set the charge to 0 after each shot?." },
    "charging_triggers_dry_fire_events" : { "type": "byte", "description": "[bool]Used only for specific weapons that needs to trigger dry fire events when charging" },
    "owner_warning_vo_event" : { "type": "uint", "default": 267052615, "description": "[string]The VO Event to play on owner when the beam weapon reaches warning level." },
    "owner_overheat_vo_event" : { "type": "uint", "default": 3049724096, "description": "[string]The VO Event to play on owner when the beam weapon gets overheated." },
    "min_reload_temperature" : { "type": "float", "default": 0, "description": "How much temperature do we need before we can reload" },
    "charge_mesh" : { "type": "uint", "description": "[string]Mesh to set charge value on." },
    "charge_material" : { "type": "uint", "description": "[string]Material to set charge value on." },
    "charge_variable" : { "type": "uint", "description": "[string]Material variable to set charge value on." },
    "overheat_variable" : { "type": "uint", "description": "[string]Material variable to set overheat bool." },
    "charging_start_audio_event" : { "type": "uint", "description": "[wwise]The audio event to play on start charging" },
    "charging_complete_audio_event" : { "type": "uint", "description": "[wwise]The audio event to play when charging complete." },
    "discharging_start_audio_event" : { "type": "uint", "description": "[wwise]The audio event to play on start discharging" },
    "discharging_complete_audio_event" : { "type": "uint", "description": "[wwise]The audio event to play when discharging complete." },
    "charge_source_node" : { "type": "uint", "description": "[string]The node to play the charge/discharge audio events at." },
    "on_temp_yellow_start_sound_event" : { "type": "uint", "description": "[wwise]The wwise sound id to play when yellow temperature starts." },
    "on_temp_yellow_stop_sound_event" : { "type": "uint", "description": "[wwise]The wwise sound id to play when yellow temperature stops." },
    "on_overheat_start_sound_event" : { "type": "uint", "description": "[wwise]The wwise sound id to play when overheating starts." },
    "on_overheat_stop_sound_event" : { "type": "uint", "description": "[wwise]The wwise sound id to play when overheating stops." },
    "on_overheat_anim_event" : { "type": "uint", "description": "[string]The animation event to trigger when overheating starts." },
    "on_overheat_alarm_start_sound_event" : { "type": "uint", "description": "[wwise]The wwise sound id to play when overheating starts." },
    "on_overheat_alarm_stop_sound_event" : { "type": "uint", "description": "[wwise]The wwise sound id to play when overheating stops." },
    "camera_shake_on_charging_start" : { "type": "ulong", "description": "[camera_shake]The shake effect to play when the laser weapon starts charging. This ends when the charging is complete." },
    "camera_shake_on_firing_start" : { "type": "ulong", "description": "[camera_shake]The shake effect to play when the laser weapon starts discharging. This ends when the discharging is complete." },
    "camera_shake_on_yellow_temp_start" : { "type": "ulong", "description": "[camera_shake]The shake effect to play when the laser weapon enters yellow temperature. This ends when it exits out of yellow temperature." },
    "camera_shake_on_red_temp_start" : { "type": "ulong", "description": "[camera_shake]The shake effect to play when the laser weapon enters red temperature. This ends when it exits out of red temperature." },
    "camera_shake_on_fire_stop_constant" : { "type": "ulong", "description": "[camera_shake]The exiting constant effect for when you stop firing the weapon." },
    "camera_shake_on_fire_stop_kick" : { "type": "ulong", "description": "[camera_shake]The exiting kick effect for when you stop firing the weapon." },
    "overheat_ability" : { "type": "AbilityId", "default": "AbilityId_Invalid", "description": "The ability to play when this weapon overheats." }
}}
